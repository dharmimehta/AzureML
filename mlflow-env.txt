To use MLflow during training job, the mlflow and azureml-mlflow pip packages need to be installed on the compute executing the script. Therefore, you need to include these two packages in the environment. You can create an environment by referring to a YAML file that describes the Conda environment. As part of the Conda environment, you can include these two packages.

Log metrics with MLflow
In your training script(main.py), you can decide whatever custom metric you want to log with MLflow.

Depending on the type of value you want to log, use the MLflow command to store the metric with the experiment run:

mlflow.log_param(): Log single key-value parameter. Use this function for an input parameter you want to log.

mlflow.log_metric(): Log single key-value metric. Value must be a number. Use this function for any output you want to store with the run.

mlflow.log_artifact(): Log a file. Use this function for any plot you want to log, save as image file first.


import mlflow
import mlflow.sklearn

mlflow.start_run()

# Log parameters
mlflow.log_param("learning_rate", 0.01)
mlflow.log_param("n_estimators", 100)

# Train model
model = train_model(...)

# Log metrics
mlflow.log_metric("accuracy", acc)

# Log the model
mlflow.sklearn.log_model(model, "model")

mlflow.end_run()
